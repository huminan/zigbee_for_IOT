///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        05/Apr/2018  20:32:21 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\Source\SensorSys_Tools.c          /
//    Command line       =  -f D:\ProgramData\Hardware\zigbee\Projects\zstack /
//                          \Samples\SensorSys\CC2530DB\..\..\..\Tools\CC2530 /
//                          DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func    /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f D:\ProgramData\Hardware\zigbee\Projects\zstack /
//                          \Samples\SensorSys\CC2530DB\..\..\..\Tools\CC2530 /
//                          DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0          /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\ProgramData\Hardware\zi /
//                          gbee\Projects\zstack\Samples\SensorSys\Source\Sen /
//                          sorSys_Tools.c -D HOLD_AUTO_START -D              /
//                          BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D      /
//                          xNV_RESTORE -D ZTOOL_P1 -D xMT_TASK -D            /
//                          xMT_SYS_FUNC -D xMT_SAPI_FUNC -D                  /
//                          xMT_SAPI_CB_FUNC -lC D:\ProgramData\Hardware\zigb /
//                          ee\Projects\zstack\Samples\SensorSys\CC2530DB\Coo /
//                          rdinatorEB\List\ -lA D:\ProgramData\Hardware\zigb /
//                          ee\Projects\zstack\Samples\SensorSys\CC2530DB\Coo /
//                          rdinatorEB\List\ --diag_suppress Pe001,Pa010 -o   /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\CoordinatorEB\Obj\ -e    /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\ -I                      /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\Source\ -I            /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\ZMain\TI2530DB\ /
//                           -I D:\ProgramData\Hardware\zigbee\Projects\zstac /
//                          k\Samples\SensorSys\CC2530DB\..\..\..\..\..\Compo /
//                          nents\hal\include\ -I D:\ProgramData\Hardware\zig /
//                          bee\Projects\zstack\Samples\SensorSys\CC2530DB\.. /
//                          \..\..\..\..\Components\hal\target\CC2530EB\ -I   /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\mac\include\ -I D:\ProgramData\Hardware\zigbee\ /
//                          Projects\zstack\Samples\SensorSys\CC2530DB\..\..\ /
//                          ..\..\..\Components\mac\high_level\ -I            /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\mac\low_level\srf04\ -I                         /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\mac\low_level\srf04\single_chip\ -I             /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\mt\ -I D:\ProgramData\Hardware\zigbee\Projects\ /
//                          zstack\Samples\SensorSys\CC2530DB\..\..\..\..\..\ /
//                          Components\osal\include\ -I                       /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\services\saddr\ -I D:\ProgramData\Hardware\zigb /
//                          ee\Projects\zstack\Samples\SensorSys\CC2530DB\..\ /
//                          ..\..\..\..\Components\services\sdata\ -I         /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\stack\af\ -I D:\ProgramData\Hardware\zigbee\Pro /
//                          jects\zstack\Samples\SensorSys\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\nwk\ -I                    /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\stack\sapi\ -I D:\ProgramData\Hardware\zigbee\P /
//                          rojects\zstack\Samples\SensorSys\CC2530DB\..\..\. /
//                          .\..\..\Components\stack\sec\ -I                  /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\stack\sys\ -I D:\ProgramData\Hardware\zigbee\Pr /
//                          ojects\zstack\Samples\SensorSys\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\zdo\ -I                   /
//                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\..\..\..\..\..\Component /
//                          s\zmac\ -I D:\ProgramData\Hardware\zigbee\Project /
//                          s\zstack\Samples\SensorSys\CC2530DB\..\..\..\..\. /
//                          .\Components\zmac\f8w\ -Ohz --require_prototypes  /
//    List file          =  D:\ProgramData\Hardware\zigbee\Projects\zstack\Sa /
//                          mples\SensorSys\CC2530DB\CoordinatorEB\List\Senso /
//                          rSys_Tools.s51                                    /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME SensorSys_Tools

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?V0
        EXTERN ?XSTACK_DISP0_8

        PUBLIC ??Locate_Pos?relay
        FUNCTION ??Locate_Pos?relay,0203H
        PUBLIC ??Num_Pos?relay
        FUNCTION ??Num_Pos?relay,0203H
        PUBLIC ??mid?relay
        FUNCTION ??mid?relay,0203H
        PUBLIC Locate_Pos
        FUNCTION Locate_Pos,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC Num_Pos
        FUNCTION Num_Pos,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC mid
        FUNCTION mid,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
strlen              SYMBOL "strlen"
??strlen?relay      SYMBOL "?relay", strlen
Locate_Pos          SYMBOL "Locate_Pos"
??Locate_Pos?relay  SYMBOL "?relay", Locate_Pos
Num_Pos             SYMBOL "Num_Pos"
??Num_Pos?relay     SYMBOL "?relay", Num_Pos
mid                 SYMBOL "mid"
??mid?relay         SYMBOL "?relay", mid

        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H

// D:\ProgramData\Hardware\zigbee\Projects\zstack\Samples\SensorSys\Source\SensorSys_Tools.c
//    1 #include <stdio.h>
//    2 #include <string.h>
//    3 #include "SensorSys_Tools.h"
//    4 #include "ZComDef.h"
//    5 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    6 uint8 * mid(uint8 *dst,uint8 *src, int n,int m)
mid:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function mid
        CODE
//    7 {
        FUNCALL mid, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
//    8     uint8 *p = src;
//    9     uint8 *q = dst;
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
//   10     int len = strlen(src);
        ; Setup parameters for call to function strlen
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??strlen?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     R0,?V0 + 8
        MOV     R1,?V0 + 9
//   11     if(n>len) n = len-m;
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 2
        MOV     A,R1
        SUBB    A,?V0 + 3
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??mid_0
        MOV     A,R0
        CLR     C
        SUBB    A,?V0 + 6
        MOV     ?V0 + 2,A
        MOV     A,R1
        SUBB    A,?V0 + 7
        MOV     ?V0 + 3,A
//   12     if(m<0) m=0;
??mid_0:
        CLR     C
        MOV     A,?V0 + 7
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??mid_1
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
//   13     if(m>len) return NULL;
??mid_1:
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 6
        MOV     A,R1
        SUBB    A,?V0 + 7
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??mid_2
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mid_3
//   14     p += m;
??mid_2:
        MOV     A,R6
        ADD     A,?V0 + 6
        MOV     R0,A
        MOV     A,R7
        ADDC    A,?V0 + 7
        MOV     R1,A
        SJMP    ??mid_4
//   15     while(n--) *(q++) = *(p++);
??mid_5:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
??mid_4:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     A,R2
        ADD     A,#-0x1
        MOV     ?V0 + 2,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     ?V0 + 3,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??mid_5
//   16     *(q++)='\0';
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        CLR     A
        MOVX    @DPTR,A
//   17     return dst;
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??mid_3:
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   18 }
//   19 						  

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   20 uint8 Locate_Pos(uint8 *buf,uint8 cx)
Locate_Pos:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function Locate_Pos
        CODE
//   21 {	 		    
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R1
        MOV     R4,A
//   22 	uint8 *p=buf;
        MOV     A,R2
        MOV     R0,A
        SJMP    ??Locate_Pos_0
//   23 	while(cx)
//   24 	{		 
//   25 		if(*buf=='*'||*buf<' '||*buf>'z')return 0XFF;
//   26 		if(*buf==',')cx--;
??Locate_Pos_1:
        MOVX    A,@DPTR
        XRL     A,#0x2c
        JNZ     ??Locate_Pos_2
        DEC     R4
//   27 		buf++;
??Locate_Pos_2:
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
??Locate_Pos_0:
        MOV     A,R4
        JZ      ??Locate_Pos_3
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,#0x2a
        JZ      ??Locate_Pos_4
        MOVX    A,@DPTR
        ADD     A,#-0x20
        CLR     C
        SUBB    A,#0x5b
        JC      ??Locate_Pos_1
??Locate_Pos_4:
        MOV     R1,#-0x1
        SJMP    ??Locate_Pos_5
//   28 	}
//   29 	return buf-p;	 
??Locate_Pos_3:
        MOV     A,R2
        CLR     C
        SUBB    A,R0
        MOV     R1,A
??Locate_Pos_5:
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
//   30 }
//   31 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   32 uint8 Num_Pos(uint16 len, uint8 *buf)
Num_Pos:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function Num_Pos
        CODE
//   33 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   34     uint8 num = 0;
        MOV     R1,#0x0
//   35     uint16 length = len;
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        SJMP    ??Num_Pos_0
//   36 //    uint8 *p=buf;
//   37     while(length--)
//   38     {		 
//   39         if(*buf==',')num++;
??Num_Pos_1:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        XRL     A,#0x2c
        JNZ     ??Num_Pos_2
        INC     R1
//   40         buf++;
??Num_Pos_2:
        INC     DPTR
        MOV     R4,DPL
        MOV     R5,DPH
//   41     }
??Num_Pos_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        ADD     A,#-0x1
        DEC     R6
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     R7,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??Num_Pos_1
//   42     return num;	
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//   43 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mid?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mid

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Locate_Pos?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Locate_Pos

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Num_Pos?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Num_Pos

        END
// 
// 303 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
// 
// 321 bytes of CODE memory
//
//Errors: none
//Warnings: 1
