###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         30/Mar/2018  16:46:38 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\Source\SensorSys_Tools.c            #
#    Command line       =  -f D:\ProgramData\Hardware\zigbee\Projects\zstack\ #
#                          Samples\SensorSys\CC2530DB\..\..\..\Tools\CC2530DB #
#                          \f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func       #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\ProgramData\Hardware\zigbee\Projects\zstack\ #
#                          Samples\SensorSys\CC2530DB\..\..\..\Tools\CC2530DB #
#                          \f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0             #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000         #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\ProgramData\Hardware\zig #
#                          bee\Projects\zstack\Samples\SensorSys\Source\Senso #
#                          rSys_Tools.c -D HOLD_AUTO_START -D                 #
#                          BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D       #
#                          xNV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D            #
#                          xMT_SYS_FUNC -D xMT_SAPI_FUNC -D xMT_SAPI_CB_FUNC  #
#                          -lC D:\ProgramData\Hardware\zigbee\Projects\zstack #
#                          \Samples\SensorSys\CC2530DB\CoordinatorEB\List\    #
#                          -lA D:\ProgramData\Hardware\zigbee\Projects\zstack #
#                          \Samples\SensorSys\CC2530DB\CoordinatorEB\List\    #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\CoordinatorEB\Obj\ -e      #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\ProgramData\Hardware\zigbee\Projects\zstack\ #
#                          Samples\SensorSys\CC2530DB\ -I                     #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\Source\ -I              #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\ZMain\TI2530DB\   #
#                          -I D:\ProgramData\Hardware\zigbee\Projects\zstack\ #
#                          Samples\SensorSys\CC2530DB\..\..\..\..\..\Componen #
#                          ts\hal\include\ -I D:\ProgramData\Hardware\zigbee\ #
#                          Projects\zstack\Samples\SensorSys\CC2530DB\..\..\. #
#                          .\..\..\Components\hal\target\CC2530EB\ -I         #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          mac\include\ -I D:\ProgramData\Hardware\zigbee\Pro #
#                          jects\zstack\Samples\SensorSys\CC2530DB\..\..\..\. #
#                          .\..\Components\mac\high_level\ -I                 #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          mac\low_level\srf04\ -I D:\ProgramData\Hardware\zi #
#                          gbee\Projects\zstack\Samples\SensorSys\CC2530DB\.. #
#                          \..\..\..\..\Components\mac\low_level\srf04\single #
#                          _chip\ -I D:\ProgramData\Hardware\zigbee\Projects\ #
#                          zstack\Samples\SensorSys\CC2530DB\..\..\..\..\..\C #
#                          omponents\mt\ -I D:\ProgramData\Hardware\zigbee\Pr #
#                          ojects\zstack\Samples\SensorSys\CC2530DB\..\..\..\ #
#                          ..\..\Components\osal\include\ -I                  #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          services\saddr\ -I D:\ProgramData\Hardware\zigbee\ #
#                          Projects\zstack\Samples\SensorSys\CC2530DB\..\..\. #
#                          .\..\..\Components\services\sdata\ -I              #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          stack\af\ -I D:\ProgramData\Hardware\zigbee\Projec #
#                          ts\zstack\Samples\SensorSys\CC2530DB\..\..\..\..\. #
#                          .\Components\stack\nwk\ -I                         #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          stack\sapi\ -I D:\ProgramData\Hardware\zigbee\Proj #
#                          ects\zstack\Samples\SensorSys\CC2530DB\..\..\..\.. #
#                          \..\Components\stack\sec\ -I                       #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          stack\sys\ -I D:\ProgramData\Hardware\zigbee\Proje #
#                          cts\zstack\Samples\SensorSys\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\zdo\ -I                        #
#                          D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\..\..\..\..\..\Components\ #
#                          zmac\ -I D:\ProgramData\Hardware\zigbee\Projects\z #
#                          stack\Samples\SensorSys\CC2530DB\..\..\..\..\..\Co #
#                          mponents\zmac\f8w\ -Ohz --require_prototypes       #
#    List file          =  D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\CoordinatorEB\List\SensorS #
#                          ys_Tools.lst                                       #
#    Object file        =  D:\ProgramData\Hardware\zigbee\Projects\zstack\Sam #
#                          ples\SensorSys\CC2530DB\CoordinatorEB\Obj\SensorSy #
#                          s_Tools.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

D:\ProgramData\Hardware\zigbee\Projects\zstack\Samples\SensorSys\Source\SensorSys_Tools.c
      1          #include <stdio.h>
      2          #include <string.h>
      3          #include "SensorSys_Tools.h"
      4          #include "ZComDef.h"
      5          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      6          uint8 * mid(uint8 *dst,uint8 *src, int n,int m)
   \                     mid:
      7          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   \   00000D   7412         MOV     A,#0x12
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 2,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 3,A
   \   000019   7414         MOV     A,#0x14
   \   00001B   12....       LCALL   ?XSTACK_DISP0_8
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F5..         MOV     ?V0 + 6,A
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F5..         MOV     ?V0 + 7,A
      8              uint8 *p = src;
      9              uint8 *q = dst;
   \   000025   8A..         MOV     ?V0 + 4,R2
   \   000027   8B..         MOV     ?V0 + 5,R3
     10              int len = strlen(src);
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \   000029                ; Setup parameters for call to function strlen
   \   000029   EE           MOV     A,R6
   \   00002A   FA           MOV     R2,A
   \   00002B   EF           MOV     A,R7
   \   00002C   FB           MOV     R3,A
   \   00002D   12....       LCALL   ??strlen?relay
   \   000030   8A..         MOV     ?V0 + 8,R2
   \   000032   8B..         MOV     ?V0 + 9,R3
   \   000034   A8..         MOV     R0,?V0 + 8
   \   000036   A9..         MOV     R1,?V0 + 9
     11              if(n>len) n = len-m;
   \   000038   C3           CLR     C
   \   000039   E8           MOV     A,R0
   \   00003A   95..         SUBB    A,?V0 + 2
   \   00003C   E9           MOV     A,R1
   \   00003D   95..         SUBB    A,?V0 + 3
   \   00003F   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000041   65D0         XRL     A,PSW
   \   000043   33           RLC     A
   \   000044   500B         JNC     ??mid_0
   \   000046   E8           MOV     A,R0
   \   000047   C3           CLR     C
   \   000048   95..         SUBB    A,?V0 + 6
   \   00004A   F5..         MOV     ?V0 + 2,A
   \   00004C   E9           MOV     A,R1
   \   00004D   95..         SUBB    A,?V0 + 7
   \   00004F   F5..         MOV     ?V0 + 3,A
     12              if(m<0) m=0;
   \                     ??mid_0:
   \   000051   C3           CLR     C
   \   000052   E5..         MOV     A,?V0 + 7
   \   000054   9400         SUBB    A,#0x0
   \   000056   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000058   65D0         XRL     A,PSW
   \   00005A   33           RLC     A
   \   00005B   5006         JNC     ??mid_1
   \   00005D   75..00       MOV     ?V0 + 6,#0x0
   \   000060   75..00       MOV     ?V0 + 7,#0x0
     13              if(m>len) return NULL;
   \                     ??mid_1:
   \   000063   C3           CLR     C
   \   000064   E8           MOV     A,R0
   \   000065   95..         SUBB    A,?V0 + 6
   \   000067   E9           MOV     A,R1
   \   000068   95..         SUBB    A,?V0 + 7
   \   00006A   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00006C   65D0         XRL     A,PSW
   \   00006E   33           RLC     A
   \   00006F   5006         JNC     ??mid_2
   \   000071   7A00         MOV     R2,#0x0
   \   000073   7B00         MOV     R3,#0x0
   \   000075   804A         SJMP    ??mid_3
     14              p += m;
   \                     ??mid_2:
   \   000077   EE           MOV     A,R6
   \   000078   25..         ADD     A,?V0 + 6
   \   00007A   F8           MOV     R0,A
   \   00007B   EF           MOV     A,R7
   \   00007C   35..         ADDC    A,?V0 + 7
   \   00007E   F9           MOV     R1,A
   \   00007F   8022         SJMP    ??mid_4
     15              while(n--) *(q++) = *(p++);
   \                     ??mid_5:
   \   000081   8882         MOV     DPL,R0
   \   000083   8983         MOV     DPH,R1
   \   000085   E0           MOVX    A,@DPTR
   \   000086   85..82       MOV     DPL,?V0 + 4
   \   000089   85..83       MOV     DPH,?V0 + 5
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   8882         MOV     DPL,R0
   \   00008F   8983         MOV     DPH,R1
   \   000091   A3           INC     DPTR
   \   000092   A882         MOV     R0,DPL
   \   000094   A983         MOV     R1,DPH
   \   000096   85..82       MOV     DPL,?V0 + 4
   \   000099   85..83       MOV     DPH,?V0 + 5
   \   00009C   A3           INC     DPTR
   \   00009D   8582..       MOV     ?V0 + 4,DPL
   \   0000A0   8583..       MOV     ?V0 + 5,DPH
   \                     ??mid_4:
   \   0000A3   AA..         MOV     R2,?V0 + 2
   \   0000A5   AB..         MOV     R3,?V0 + 3
   \   0000A7   EA           MOV     A,R2
   \   0000A8   24FF         ADD     A,#-0x1
   \   0000AA   F5..         MOV     ?V0 + 2,A
   \   0000AC   EB           MOV     A,R3
   \   0000AD   34FF         ADDC    A,#-0x1
   \   0000AF   F5..         MOV     ?V0 + 3,A
   \   0000B1   EA           MOV     A,R2
   \   0000B2   4B           ORL     A,R3
   \   0000B3   70CC         JNZ     ??mid_5
     16              *(q++)='\0';
   \   0000B5   85..82       MOV     DPL,?V0 + 4
   \   0000B8   85..83       MOV     DPH,?V0 + 5
   \   0000BB   E4           CLR     A
   \   0000BC   F0           MOVX    @DPTR,A
     17              return dst;
   \   0000BD   AA..         MOV     R2,?V0 + 0
   \   0000BF   AB..         MOV     R3,?V0 + 1
   \                     ??mid_3:
   \   0000C1   7F0A         MOV     R7,#0xa
   \   0000C3   02....       LJMP    ?BANKED_LEAVE_XDATA
     18          }
     19          						  

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     20          uint8 Locate_Pos(uint8 *buf,uint8 cx)
   \                     Locate_Pos:
     21          {	 		    
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   E9           MOV     A,R1
   \   000005   FC           MOV     R4,A
     22          	uint8 *p=buf;
   \   000006   EA           MOV     A,R2
   \   000007   F8           MOV     R0,A
   \   000008   800B         SJMP    ??Locate_Pos_0
     23          	while(cx)
     24          	{		 
     25          		if(*buf=='*'||*buf<' '||*buf>'z')return 0XFF;
     26          		if(*buf==',')cx--;
   \                     ??Locate_Pos_1:
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   642C         XRL     A,#0x2c
   \   00000D   7001         JNZ     ??Locate_Pos_2
   \   00000F   1C           DEC     R4
     27          		buf++;
   \                     ??Locate_Pos_2:
   \   000010   A3           INC     DPTR
   \   000011   AA82         MOV     R2,DPL
   \   000013   AB83         MOV     R3,DPH
   \                     ??Locate_Pos_0:
   \   000015   EC           MOV     A,R4
   \   000016   6015         JZ      ??Locate_Pos_3
   \   000018   8A82         MOV     DPL,R2
   \   00001A   8B83         MOV     DPH,R3
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   642A         XRL     A,#0x2a
   \   00001F   6008         JZ      ??Locate_Pos_4
   \   000021   E0           MOVX    A,@DPTR
   \   000022   24E0         ADD     A,#-0x20
   \   000024   C3           CLR     C
   \   000025   945B         SUBB    A,#0x5b
   \   000027   40E1         JC      ??Locate_Pos_1
   \                     ??Locate_Pos_4:
   \   000029   79FF         MOV     R1,#-0x1
   \   00002B   8004         SJMP    ??Locate_Pos_5
     28          	}
     29          	return buf-p;	 
   \                     ??Locate_Pos_3:
   \   00002D   EA           MOV     A,R2
   \   00002E   C3           CLR     C
   \   00002F   98           SUBB    A,R0
   \   000030   F9           MOV     R1,A
   \                     ??Locate_Pos_5:
   \   000031   D083         POP     DPH
   \   000033   D082         POP     DPL
   \   000035   02....       LJMP    ?BRET
     30          }
     31          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     32          uint8 Num_Pos(uint16 len, uint8 *buf)
   \                     Num_Pos:
     33          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     34              uint8 num = 0;
   \   000005   7900         MOV     R1,#0x0
     35              uint16 length = len;
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
   \   00000B   800F         SJMP    ??Num_Pos_0
     36          //    uint8 *p=buf;
     37              while(length--)
     38              {		 
     39                  if(*buf==',')num++;
   \                     ??Num_Pos_1:
   \   00000D   8C82         MOV     DPL,R4
   \   00000F   8D83         MOV     DPH,R5
   \   000011   E0           MOVX    A,@DPTR
   \   000012   642C         XRL     A,#0x2c
   \   000014   7001         JNZ     ??Num_Pos_2
   \   000016   09           INC     R1
     40                  buf++;
   \                     ??Num_Pos_2:
   \   000017   A3           INC     DPTR
   \   000018   AC82         MOV     R4,DPL
   \   00001A   AD83         MOV     R5,DPH
     41              }
   \                     ??Num_Pos_0:
   \   00001C   EE           MOV     A,R6
   \   00001D   FA           MOV     R2,A
   \   00001E   EF           MOV     A,R7
   \   00001F   FB           MOV     R3,A
   \   000020   EA           MOV     A,R2
   \   000021   24FF         ADD     A,#-0x1
   \   000023   1E           DEC     R6
   \   000024   EB           MOV     A,R3
   \   000025   34FF         ADDC    A,#-0x1
   \   000027   FF           MOV     R7,A
   \   000028   EA           MOV     A,R2
   \   000029   4B           ORL     A,R3
   \   00002A   70E1         JNZ     ??Num_Pos_1
     42              return num;	
   \   00002C   7F01         MOV     R7,#0x1
   \   00002E   02....       LJMP    ?BANKED_LEAVE_XDATA
     43          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??mid?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    mid

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Locate_Pos?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Locate_Pos

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Num_Pos?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Num_Pos

   Maximum stack usage in bytes:

     Function    ISTACK PSTACK XSTACK
     --------    ------ ------ ------
     Locate_Pos      2      0      0
     Num_Pos         0      0      9
     mid             1      0     22
       -> strlen     0      0     36


   Segment part sizes:

     Function/Label     Bytes
     --------------     -----
     mid                 198
     Locate_Pos           56
     Num_Pos              49
     ??mid?relay           6
     ??Locate_Pos?relay    6
     ??Num_Pos?relay       6

 
 303 bytes in segment BANKED_CODE
  18 bytes in segment BANK_RELAYS
 
 321 bytes of CODE memory

Errors: none
Warnings: 1
